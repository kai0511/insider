suppressPackageStartupMessages({
require(ggplot2)
require(formatR)
require(knitr)
require(cluster)
require(factoextra)
require(dplyr)
require(RColorBrewer)
require(clusterProfiler)
require(org.Hs.eg.db)
require(enrichplot)
require(stringr)
require(forcats)
require(DOSE)
require(ggplot2)
require(hrbrthemes)
require(viridis)
require(reshape2)
require(gridExtra)
require(extrafont)
})
truncated_var <- function(x){
remove_idx <- c(which.max(x), which.min(x))
var(x[-remove_idx])
}
wrap_labal <- function(x, width = 60){
str_wrap(x, width=60)
}
opts_chunk$set(tidy.opts=list(width.cutoff=80),tidy=TRUE)
setwd("~/data/multidimensional_datasets/brainspan_genes_matrix_csv/")
# load results for brain span
load("~/data/Results/brainspan/insider_brainspan_fitted_object.RData")
attach(object) # attach it for easy syntax
str(object) # show the structure of our result
stage_factor <- cfd_matrices[[1]]
tissue_factor <- cfd_matrices[[2]]
# read meta information
dic <- read.csv("~/data/Results/brainspan/dictionary.csv", stringsAsFactors = F)
# obtain ensemble genes included in our study
load("brainspan_dataset_annotated_fitered.RData")
gene_id <- data.frame(ensembl_gene_id = colnames(data), stringsAsFactors =F)
# match the included genes with meta information
row_meta <- read.csv('rows_metadata.csv', stringsAsFactors = F)
meta <- inner_join(gene_id, row_meta, by = "ensembl_gene_id")
# prepare struture and stage names for naming corresponding latent factors
structure <- unique(dic[,c(6, 9)])
structure <- structure[order(structure[,2]),]
stage <- unique(dic[,c(11, 12)])
r_names <- apply(stage, 1, function(x) paste0(x[2], "_", trimws(x[1])))
# name tissue_factor and stage_factor
rownames(tissue_factor) <- structure[,1]
rownames(stage_factor) <- r_names
# compute the variance for each metagene
matagene_var <- apply(stage_factor, 2, var)
ord <- order(matagene_var, decreasing = TRUE)
stage_factor[, ord[1:3]]
# use the most variably metagene as an example
metagene_id <- ord[1]
cat("Column_id:", metagene_id, "\n")
loadfonts(quiet = T)
result <- data.frame(stage = r_names, levels = stage_factor[, metagene_id], stringsAsFactors = F)
result$stage <- factor(r_names, levels = r_names)
# ggplot(data = result, aes(x = stage, y = levels, group = 1)) +
#     geom_line(linetype = "dashed") +
#     geom_point() +
#     xlab("Stages") + ylab("Levels") +
#     theme(plot.title = element_text(size=12, face = "bold", hjust = 0.5),
#           axis.title.y = element_text(size=10),
#           text=element_text(size=10, family="Times New Roman"),
#           axis.text.x = element_text(size=10,angle = 45, vjust = 1, hjust=1))
ggplot(data = result, aes(x = stage, y = levels, group = 1)) +
scale_color_viridis(discrete = T) +
scale_x_discrete(labels=2:14)+
geom_line() + theme_ipsum(base_family = "Times New Roman", base_size= 14, axis_title_size = 16) +
xlab("Stages") + ylab("Levels")
#axis.text.x = element_text(size=10,angle = 45, vjust = 1, hjust=1))
cat("Column_id:", metagene_id, "\n")
cutoffs <- quantile(column_factor[metagene_id,], probs = seq(0, 1, 0.025))
# up-regulation, select the highest quantile
selected <- (column_factor[metagene_id,] >= cutoffs[length(cutoffs) - 1]) #
upreg <- enrichGO(gene = unique(meta[selected,5]),
OrgDb = 'org.Hs.eg.db',
ont = "BP",
readable = TRUE)
dotplot(upreg, font = 9, showCategory=30) +
scale_y_discrete(labels = function(x) str_wrap(x, width=60))+
theme(text=element_text(family="Times New Roman"))
# the object from enrichGO can be converted to data frame with the following.
# result <- data.frame(upreg)
# save(upreg, file = paste0('metagene', metagene_id, 'upreg_dev_pathway.RData'))
# down-regulation,  select the lowest quantile
selected <- (column_factor[metagene_id,] <= cutoffs[2])
downreg <- enrichGO(gene = unique(meta[selected,5]),
OrgDb = 'org.Hs.eg.db',
ont = "BP",
readable = TRUE)
dotplot(downreg, font = 9, showCategory=30) +
scale_y_discrete(labels = function(x) wrap_labal(x))+
theme(text=element_text(family="Times New Roman"))
# save(upreg, file = paste0('metagene', metagene_id, 'downreg_dev_pathway.RData'))
loadfonts(quiet = T)
result <- data.frame(stage = r_names, levels = stage_factor[, metagene_id], stringsAsFactors = F)
result$stage <- factor(r_names, levels = r_names)
# ggplot(data = result, aes(x = stage, y = levels, group = 1)) +
#     geom_line(linetype = "dashed") +
#     geom_point() +
#     xlab("Stages") + ylab("Levels") +
#     theme(plot.title = element_text(size=12, face = "bold", hjust = 0.5),
#           axis.title.y = element_text(size=10),
#           text=element_text(size=10, family="Times New Roman"),
#           axis.text.x = element_text(size=10,angle = 45, vjust = 1, hjust=1))
ggplot(data = result, aes(x = stage, y = levels, group = 1)) +
scale_color_viridis(discrete = T) +
scale_x_discrete(labels=2:14)+
geom_line() + theme_ipsum(base_family = "Times New Roman", base_size= 14, axis_title_size = 16) +
xlab("Stages") + ylab("Levels")
#axis.text.x = element_text(size=10,angle = 45, vjust = 1, hjust=1))
# metagene_id <- ord[length(ord)]
metagene_id <- 14
cat("Column_id:", metagene_id, "\n")
cutoffs <- quantile(column_factor[metagene_id,], probs = seq(0, 1, 0.025))
# up-regulation, select the highest quantile
selected <- (column_factor[metagene_id,] <= cutoffs[2])
upreg <- enrichGO(gene = unique(meta[selected,5]),
OrgDb = 'org.Hs.eg.db',
ont = "BP",
readable = TRUE)
dotplot(upreg, font = 9, showCategory=30) +
scale_y_discrete(labels = function(x) wrap_labal(x))+
theme(text=element_text(family="Times New Roman"))
# save(upreg, file = paste0('metagene', metagene_id, 'upreg_dev_pathway.RData'))
# down-regulation, select the lowest quantile
# selected <- (column_factor[metagene_id,] <= cutoffs[2])
# downreg <- enrichGO(gene = unique(meta[selected,5]),
#                     OrgDb = 'org.Hs.eg.db',
#                     ont = "BP",
#                     readable = TRUE)
# dot_plot(downreg, font = 8, showCategory=50)
# save(upreg, file = paste0('metagene', metagene_id, 'downreg_dev_pathway.RData'))
# DCX expressed in neuronal progenitor cells and immature migrating neurons
# SYP, SYPL1, SYN1 for synapse development
# MAP1A, MAPT, CAMK2A for dendrite development
# selected_genes <- c("DCX", "SYP", "SYPL1", "SYN1", "SYPL2", "MAPT", "MAP1A", "CAMK2A", "NRXN1", "POU2F3", "SYNPO", "PRNP", "RASGRF1")
gene_order <- order(column_factor[metagene_id,], decreasing = TRUE)
selected_genes <- gene_id[gene_order[1:5],]
col_ids <- sapply(selected_genes, function(x) which(meta[[1]] == x))
stage_profiles <- stage_factor %*% column_factor
selected <- stage_profiles[,col_ids]
colnames(selected) <- meta[[4]][col_ids]
rownames(selected) <- r_names
result1 <- melt(selected)
colnames(result1) <- c("Stage", "Gene", "Levels")
result1$Stage <- factor(r_names, levels = r_names)
selected_genes <- gene_id[gene_order[(length(gene_order)-4):length(gene_order)],]
col_ids <- sapply(selected_genes, function(x) which(meta[[1]] == x))
selected <- stage_profiles[,col_ids]
colnames(selected) <- meta[[4]][col_ids]
rownames(selected) <- r_names
result2 <- melt(selected)
colnames(result2) <- c("Stage", "Gene", "Levels")
result2$Stage <- factor(r_names, levels = r_names)
# par(mfrow = c(1, 2))
p1 <- ggplot(data = result1, aes(x=Stage, y=Levels, group = Gene, color=Gene)) +
scale_color_viridis(discrete = TRUE) +
geom_line(size=1) +
ggtitle("Trajectories of selected top5 up-regulated genes") +
theme_ipsum(base_family = "Times New Roman", base_size= 8, plot_title_face = "bold", axis_title_size = 10, plot_title_size = 10) +
scale_x_discrete(labels=2:14)+
xlab("Stages") + ylab("Levels")
p2 <- ggplot(data = result2, aes(x=Stage, y=Levels, group = Gene, color=Gene)) +
scale_color_viridis(discrete = TRUE) +
geom_line(size=1) +
ggtitle("Trajectories of selected top down-regulated genes") +
theme_ipsum(base_family = "Times New Roman", base_size= 8, plot_title_face = "bold", axis_title_size = 10, plot_title_size = 10) +
scale_x_discrete(labels=2:14)+
xlab("Stages") + ylab("Levels")
# p3 <- ggplot(data = result[result$Gene %in% c("MAP1A", "MAPT", "CAMK2A"), ], aes(x=Stage, y=Levels, group = Gene, color=Gene)) +
#     scale_color_viridis(discrete = TRUE) +
#     geom_line(size=1) +
#     ggtitle("Trajectories of genes involved in dendrite development") +
#     theme_ipsum(base_family = "Times New Roman", base_size= 12, plot_title_face = "bold", axis_title_size = 16, plot_title_size = 18) +
#     scale_x_discrete(labels=2:14)+
#     xlab("Stages") + ylab("Levels")
# p4 <- ggplot(data = result[result$Gene %in% c("SYNPO", "PRNP", "RASGRF1"), ], aes(x=Stage, y=Levels, group = Gene, color=Gene)) +
#     scale_color_viridis(discrete = TRUE) +
#     geom_line(size=1) +
#     ggtitle("Trajectories of genes enriched for cognition")  +
#     theme_ipsum(base_family = "Times New Roman", base_size= 12, plot_title_face = "bold", axis_title_size = 16, plot_title_size = 18) +
#     scale_x_discrete(labels=2:14)+
#     xlab("Stages") + ylab("Levels")
grid.arrange(p1, p2, ncol=2)
# DCX expressed in neuronal progenitor cells and immature migrating neurons
# SYP, SYPL1, SYN1 for synapse development
# MAP1A, MAPT, CAMK2A for dendrite development
# selected_genes <- c("DCX", "SYP", "SYPL1", "SYN1", "SYPL2", "MAPT", "MAP1A", "CAMK2A", "NRXN1", "POU2F3", "SYNPO", "PRNP", "RASGRF1")
gene_order <- order(column_factor[metagene_id,], decreasing = TRUE)
selected_genes <- gene_id[gene_order[1:5],]
col_ids <- sapply(selected_genes, function(x) which(meta[[1]] == x))
stage_profiles <- stage_factor %*% column_factor
selected <- stage_profiles[,col_ids]
colnames(selected) <- meta[[4]][col_ids]
rownames(selected) <- r_names
result1 <- melt(selected)
colnames(result1) <- c("Stage", "Gene", "Levels")
result1$Stage <- factor(r_names, levels = r_names)
selected_genes <- gene_id[gene_order[(length(gene_order)-4):length(gene_order)],]
col_ids <- sapply(selected_genes, function(x) which(meta[[1]] == x))
selected <- stage_profiles[,col_ids]
colnames(selected) <- meta[[4]][col_ids]
rownames(selected) <- r_names
result2 <- melt(selected)
colnames(result2) <- c("Stage", "Gene", "Levels")
result2$Stage <- factor(r_names, levels = r_names)
# par(mfrow = c(1, 2))
p1 <- ggplot(data = result1, aes(x=Stage, y=Levels, group = Gene, color=Gene)) +
scale_color_viridis(discrete = TRUE) +
geom_line(size=1) +
ggtitle("Trajectories of selected top5 up-regulated genes") +
theme_ipsum(base_family = "Times New Roman", base_size= 8, plot_title_face = "bold", axis_title_size = 10, plot_title_size = 10) +
scale_x_discrete(labels=2:14)+
xlab("Stages") + ylab("Levels")
p2 <- ggplot(data = result2, aes(x=Stage, y=Levels, group = Gene, color=Gene)) +
scale_color_viridis(discrete = TRUE) +
geom_line(size=1) +
ggtitle("Trajectories of selected top down-regulated genes") +
theme_ipsum(base_family = "Times New Roman", base_size= 8, plot_title_face = "bold", axis_title_size = 10, plot_title_size = 10) +
scale_x_discrete(labels=2:14)+
xlab("Stages") + ylab("Levels")
# p3 <- ggplot(data = result[result$Gene %in% c("MAP1A", "MAPT", "CAMK2A"), ], aes(x=Stage, y=Levels, group = Gene, color=Gene)) +
#     scale_color_viridis(discrete = TRUE) +
#     geom_line(size=1) +
#     ggtitle("Trajectories of genes involved in dendrite development") +
#     theme_ipsum(base_family = "Times New Roman", base_size= 12, plot_title_face = "bold", axis_title_size = 16, plot_title_size = 18) +
#     scale_x_discrete(labels=2:14)+
#     xlab("Stages") + ylab("Levels")
# p4 <- ggplot(data = result[result$Gene %in% c("SYNPO", "PRNP", "RASGRF1"), ], aes(x=Stage, y=Levels, group = Gene, color=Gene)) +
#     scale_color_viridis(discrete = TRUE) +
#     geom_line(size=1) +
#     ggtitle("Trajectories of genes enriched for cognition")  +
#     theme_ipsum(base_family = "Times New Roman", base_size= 12, plot_title_face = "bold", axis_title_size = 16, plot_title_size = 18) +
#     scale_x_discrete(labels=2:14)+
#     xlab("Stages") + ylab("Levels")
grid.arrange(p1, p2, ncol=2)
# DCX expressed in neuronal progenitor cells and immature migrating neurons
# SYP, SYPL1, SYN1 for synapse development
# MAP1A, MAPT, CAMK2A for dendrite development
# selected_genes <- c("DCX", "SYP", "SYPL1", "SYN1", "SYPL2", "MAPT", "MAP1A", "CAMK2A", "NRXN1", "POU2F3", "SYNPO", "PRNP", "RASGRF1")
gene_order <- order(column_factor[metagene_id,], decreasing = TRUE)
selected_genes <- gene_id[gene_order[1:5],]
col_ids <- sapply(selected_genes, function(x) which(meta[[1]] == x))
stage_profiles <- stage_factor %*% column_factor
selected <- stage_profiles[,col_ids]
colnames(selected) <- meta[[4]][col_ids]
rownames(selected) <- r_names
result1 <- melt(selected)
colnames(result1) <- c("Stage", "Gene", "Levels")
result1$Stage <- factor(r_names, levels = r_names)
selected_genes <- gene_id[gene_order[(length(gene_order)-4):length(gene_order)],]
col_ids <- sapply(selected_genes, function(x) which(meta[[1]] == x))
selected <- stage_profiles[,col_ids]
colnames(selected) <- meta[[4]][col_ids]
rownames(selected) <- r_names
result2 <- melt(selected)
colnames(result2) <- c("Stage", "Gene", "Levels")
result2$Stage <- factor(r_names, levels = r_names)
# par(mfrow = c(1, 2))
p1 <- ggplot(data = result1, aes(x=Stage, y=Levels, group = Gene, color=Gene)) +
scale_color_viridis(discrete = TRUE) +
geom_line(size=1) +
ggtitle("Trajectories of selected top5 up-regulated genes") +
theme_ipsum(base_family = "Times New Roman", base_size= 8, plot_title_face = "bold", axis_title_size = 10, plot_title_size = 10) +
scale_x_discrete(labels=2:14)+
xlab("Stages") + ylab("Levels")
p2 <- ggplot(data = result2, aes(x=Stage, y=Levels, group = Gene, color=Gene)) +
scale_color_viridis(discrete = TRUE) +
geom_line(size=1) +
ggtitle("Trajectories of selected top down-regulated genes") +
theme_ipsum(base_family = "Times New Roman", base_size= 8, plot_title_face = "bold", axis_title_size = 10, plot_title_size = 10) +
scale_x_discrete(labels=2:14)+
xlab("Stages") + ylab("Levels")
# p3 <- ggplot(data = result[result$Gene %in% c("MAP1A", "MAPT", "CAMK2A"), ], aes(x=Stage, y=Levels, group = Gene, color=Gene)) +
#     scale_color_viridis(discrete = TRUE) +
#     geom_line(size=1) +
#     ggtitle("Trajectories of genes involved in dendrite development") +
#     theme_ipsum(base_family = "Times New Roman", base_size= 12, plot_title_face = "bold", axis_title_size = 16, plot_title_size = 18) +
#     scale_x_discrete(labels=2:14)+
#     xlab("Stages") + ylab("Levels")
# p4 <- ggplot(data = result[result$Gene %in% c("SYNPO", "PRNP", "RASGRF1"), ], aes(x=Stage, y=Levels, group = Gene, color=Gene)) +
#     scale_color_viridis(discrete = TRUE) +
#     geom_line(size=1) +
#     ggtitle("Trajectories of genes enriched for cognition")  +
#     theme_ipsum(base_family = "Times New Roman", base_size= 12, plot_title_face = "bold", axis_title_size = 16, plot_title_size = 18) +
#     scale_x_discrete(labels=2:14)+
#     xlab("Stages") + ylab("Levels")
grid.arrange(p1, p2, ncol=2)
# tissue_matrix <- tissue_factor[,-c(14)] %*% column_factor[-c(14),]
tissue_matrix <- tissue_factor %*% column_factor
rownames(tissue_matrix) <- rownames(tissue_factor)
# use the second brain region as example
tissue_id <- 2
cat("Tissue name:", rownames(tissue_factor)[tissue_id], "\n")
cutoffs <- quantile(tissue_matrix[tissue_id,], probs = seq(0, 1, 0.025))
# up_regulation, select the highest quantile
selected <- (tissue_matrix[tissue_id,] >= cutoffs[length(cutoffs) - 1])
upreg <- enrichGO(gene = unique(meta[selected,5]),
OrgDb = 'org.Hs.eg.db',
ont = "BP",
readable = TRUE)
# result <- data.frame(upreg)
dotplot(upreg, font = 9, showCategory=30) +
scale_y_discrete(labels = function(x) wrap_labal(x))+
theme(text=element_text(family="Times New Roman"))
# down-regulation, select the lowest quantile
selected <- (tissue_matrix[tissue_id,] <= cutoffs[2])
downreg <- enrichGO(gene = unique(meta[selected,5]),
OrgDb = 'org.Hs.eg.db',
ont = "BP",
readable = TRUE)
dotplot(downreg, font = 9, showCategory=30) +
scale_y_discrete(labels = function(x) wrap_labal(x))+
theme(text=element_text(family="Times New Roman"))
